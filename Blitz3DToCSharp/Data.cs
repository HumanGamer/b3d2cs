using System;
using System.Collections.Generic;
using System.Text;

namespace Blitz3DToCSharp
{
    public static class Data
    {
        public readonly static string[] Keywords = new string []
        {
            "Abs", "After", "And", "Before", "Case", "Const", "Data", "Default", "Delete",
            "Dim", "Each", "Else", "ElseIf", "EndIf", "Exit", "False", "Field", "First",
            "Float", "For", "Forever", "Function", "Global", "Gosub", "Goto", "Handle",
            "If", "Include", "Insert", "Int", "Last", "Local", "Mod", "New", "Next", "Not",
            "Null", "Object", "Or", "Pi", "Read", "Repeat", "Restore", "Return", "Sar",
            "Select", "Sgn", "Shl", "Shr", "Step", "Str", "Then", "To", "True", "Type",
            "Until", "Wend", "While", "Xor", "DebugLog text$", "FreeTimer timer",
            "WaitTimer ( timer )", "CreateTimer ( hertz )", "SetEnv env_var$,value$",
            "GetEnv$ ( env_var$ )", "SystemProperty$ ( property$ )", "CommandLine$ ( )",
            "MilliSecs ( )", "Delay millisecs", "ExecFile command$",
            "RuntimeError message$", "AppTitle title$[,close_prompt$]", "Stop ", "End ",
            "RuntimeStats ", "EntityClass$ ( entity )", "EntityName$ ( entity )",
            "NameEntity entity,name$", "FreeEntity entity", "ShowEntity entity",
            "HideEntity entity", "EntityOrder entity,order",
            "EntityAutoFade entity,near#,far#", "EntityFX entity,fx",
            "EntityBlend entity,blend", "EntityTexture entity,texture[,frame][,index]",
            "EntityShininess entity,shininess#", "EntityAlpha entity,alpha#",
            "EntityColor entity,red#,green#,blue#", "PaintEntity entity,brush",
            "FindChild ( entity,name$ )", "GetChild ( entity,index )",
            "CountChildren ( entity )", "EntityParent entity,parent[,global]",
            "Animating ( entity )", "AnimLength ( entity )", "AnimTime# ( entity )",
            "AnimSeq ( entity )",
            "ExtractAnimSeq ( entity,first_frame,last_frame[,anim_seq] )",
            "AddAnimSeq ( entity,length )",
            "SetAnimKey entity,frame[,pos_key][,rot_key][,scale_key]",
            "Animate entity[,mode][,speed#][,sequence][,transition#]",
            "SetAnimTime entity,time#[,anim_seq]",
            "AlignToVector entity,vector_x#,vector_y#,vector_z#,axis[,rate#]",
            "PointEntity entity,target[,roll#]",
            "RotateEntity entity,pitch#,yaw#,roll#[,global]",
            "ScaleEntity entity,x_scale#,y_scale#,z_scale#[,global]",
            "PositionEntity entity,x#,y#,z#[,global]",
            "TranslateEntity entity,x#,y#,z#[,global]",
            "TurnEntity entity,pitch#,yaw#,roll#[,global]", "MoveEntity entity,x#,y#,z#",
            "CollisionTriangle ( entity,collision_index )",
            "CollisionSurface ( entity,collision_index )",
            "CollisionEntity ( entity,collision_index )",
            "CollisionTime# ( entity,collision_index )",
            "CollisionNZ# ( entity,collision_index )",
            "CollisionNY# ( entity,collision_index )",
            "CollisionNX# ( entity,collision_index )",
            "CollisionZ# ( entity,collision_index )",
            "CollisionY# ( entity,collision_index )",
            "CollisionX# ( entity,collision_index )", "CountCollisions ( entity )",
            "EntityCollided ( entity,type )",
            "EntityDistance# ( source_entity,destination_entity )",
            "EntityBox entity,x#,y#,z#,width#,height#,depth#",
            "EntityRadius entity,x_radius#[,y_radius#]", "GetEntityType ( entity )",
            "GetParent ( entity )", "EntityPickMode entity,pick_geometry[,obscurer]",
            "EntityType entity,collision_type[,recursive]", "ResetEntity entity",
            "DeltaYaw# ( src_entity,dest_entity )",
            "DeltaPitch# ( src_entity,dest_entity )", "VectorPitch# ( x#,y#,z# )",
            "VectorYaw# ( x#,y#,z# )", "TFormedZ# ( )", "TFormedY# ( )", "TFormedX# ( )",
            "TFormNormal x#,y#,z#,source_entity,dest_entity",
            "TFormVector x#,y#,z#,source_entity,dest_entity",
            "TFormPoint x#,y#,z#,source_entity,dest_entity",
            "GetMatElement# ( entity,row,column )", "EntityRoll# ( entity[,global] )",
            "EntityYaw# ( entity[,global] )", "EntityPitch# ( entity[,global] )",
            "EntityZ# ( entity[,global] )", "EntityY# ( entity[,global] )",
            "EntityX# ( entity[,global] )", "CopyEntity ( entity[,parent] )",
            "EmitSound ( sound,entity )",
            "CreateListener ( parent[,rolloff_factor#][,doppler_scale#][,distance_scale#] )",
            "ModifyTerrain terrain,terrain_x,terrain_z,height#[,realtime]",
            "TerrainHeight# ( terrain,terrain_x,terrain_z )", "TerrainSize ( terrain )",
            "TerrainZ# ( terrain,world_x#,world_y#,world_z# )",
            "TerrainY# ( terrain,world_x#,world_y#,world_z# )",
            "TerrainX# ( terrain,world_x#,world_y#,world_z# )",
            "TerrainShading terrain,enable", "TerrainDetail terrain,detail_level[,morph]",
            "LoadTerrain ( heightmap_file$[,parent] )",
            "CreateTerrain ( grid_size[,parent] )", "CreatePlane ( [segments][,parent] )",
            "CreateMirror ( [parent] )", "BSPAmbientLight bsp,red#,green#,blue#",
            "BSPLighting bsp,use_lightmaps", "LoadBSP ( file$[,gamma_adj#][,parent] )",
            "MD2Animating ( md2 )", "MD2AnimLength ( md2 )", "MD2AnimTime# ( md2 )",
            "AnimateMD2 md2[,mode][,speed#][,first_frame][,last_frame][,transition#]",
            "LoadMD2 ( file$[,parent] )", "SpriteViewMode sprite,view_mode",
            "HandleSprite sprite,x_handle#,y_handle#",
            "ScaleSprite sprite,x_scale#,y_scale#", "RotateSprite sprite,angle#",
            "LoadSprite ( file$[,texture_flags][,parent] )", "CreateSprite ( [parent] )",
            "CreatePivot ( [parent] )", "LightConeAngles light,inner_angle#,outer_angle#",
            "LightRange light,range#", "LightColor light,red#,green#,blue#",
            "CreateLight ( [type][,parent] )", "PickedTriangle ( )", "PickedSurface ( )",
            "PickedEntity ( )", "PickedTime# ( )", "PickedNZ# ( )", "PickedNY# ( )",
            "PickedNX# ( )", "PickedZ# ( )", "PickedY# ( )", "PickedX# ( )",
            "CameraPick ( camera,viewport_x#,viewport_y# )",
            "LinePick ( x#,y#,z#,dx#,dy#,dz#[,radius#] )", "EntityPick ( entity,range# )",
            "EntityVisible ( src_entity,dest_entity )", "EntityInView ( entity,camera )",
            "ProjectedZ# ( )", "ProjectedY# ( )", "ProjectedX# ( )",
            "CameraProject camera,x#,y#,z#", "CameraFogMode camera,mode",
            "CameraFogRange camera,near#,far#", "CameraFogColor camera,red#,green#,blue#",
            "CameraViewport camera,x,y,width,height", "CameraProjMode camera,mode",
            "CameraClsMode camera,cls_color,cls_zbuffer",
            "CameraClsColor camera,red#,green#,blue#", "CameraRange camera,near#,far#",
            "CameraZoom camera,zoom#", "CreateCamera ( [parent] )",
            "TriangleVertex ( surface,index,vertex )",
            "VertexW# ( surface,index[,coord_set] )",
            "VertexV# ( surface,index[,coord_set] )",
            "VertexU# ( surface,index[,coord_set] )", "VertexAlpha# ( surface,index )",
            "VertexBlue# ( surface,index )", "VertexGreen# ( surface,index )",
            "VertexRed# ( surface,index )", "VertexNZ# ( surface,index )",
            "VertexNY# ( surface,index )", "VertexNX# ( surface,index )",
            "VertexZ# ( surface,index )", "VertexY# ( surface,index )",
            "VertexX# ( surface,index )", "CountTriangles ( surface )",
            "CountVertices ( surface )",
            "VertexTexCoords surface,index,u#,v#[,w#][,coord_set]",
            "VertexColor surface,index,red#,green#,blue#[,alpha#]",
            "VertexNormal surface,index,nx#,ny#,nz#", "VertexCoords surface,index,x#,y#,z#",
            "AddTriangle ( surface,v0,v1,v2 )",
            "AddVertex ( surface,x#,y#,z#[,u#][,v#][,w#] )", "PaintSurface surface,brush",
            "ClearSurface surface[,clear_vertices][,clear_triangles]",
            "FindSurface ( mesh,brush )", "GetEntityBrush ( entity )",
            "GetSurfaceBrush ( surface )", "CreateSurface ( mesh[,brush] )",
            "MeshCullBox mesh,x#,y#,z#,width#,height#,depth#",
            "GetSurface ( mesh,surface_index )", "CountSurfaces ( mesh )",
            "MeshesIntersect ( mesh_a,mesh_b )", "MeshDepth# ( mesh )",
            "MeshHeight# ( mesh )", "MeshWidth# ( mesh )",
            "LightMesh mesh,red#,green#,blue#[,range#][,x#][,y#][,z#]",
            "UpdateNormals mesh", "AddMesh source_mesh,dest_mesh", "PaintMesh mesh,brush",
            "FlipMesh mesh", "FitMesh mesh,x#,y#,z#,width#,height#,depth#[,uniform]",
            "PositionMesh mesh,x#,y#,z#", "RotateMesh mesh,pitch#,yaw#,roll#",
            "ScaleMesh mesh,x_scale#,y_scale#,z_scale#", "CopyMesh ( mesh[,parent] )",
            "CreateCone ( [segments][,solid][,parent] )",
            "CreateCylinder ( [segments][,solid][,parent] )",
            "CreateSphere ( [segments][,parent] )", "CreateCube ( [parent] )",
            "CreateMesh ( [parent] )", "LoadAnimSeq ( entity,file$ )",
            "LoadAnimMesh ( file$[,parent] )", "LoadMesh ( file$[,parent] )",
            "BrushFX brush,fx", "BrushBlend brush,blend",
            "GetBrushTexture ( brush[,index] )",
            "BrushTexture brush,texture[,frame][,index]", "BrushShininess brush,shininess#",
            "BrushAlpha brush,alpha#", "BrushColor brush,red#,green#,blue#",
            "FreeBrush brush", "LoadBrush ( file$[,texture_flags][,u_scale#][,v_scale#] )",
            "CreateBrush ( [red#][,green#][,blue#] )",
            "TextureFilter match_text$[,texture_flags]", "ClearTextureFilters ",
            "TextureBuffer ( texture[,frame] )", "SetCubeMode texture,mode",
            "SetCubeFace texture,face", "TextureName$ ( texture )",
            "TextureHeight ( texture )", "TextureWidth ( texture )",
            "PositionTexture texture,u_offset#,v_offset#", "RotateTexture texture,angle#",
            "ScaleTexture texture,u_scale#,v_scale#", "TextureCoords texture,coords",
            "TextureBlend texture,blend", "FreeTexture texture",
            "LoadAnimTexture ( file$,flags,width,height,first,count )",
            "LoadTexture ( file$[,flags] )",
            "CreateTexture ( width,height[,flags][,frames] )", "Stats3D# ( type )",
            "TrisRendered ( )", "ActiveTextures ( )",
            "ClearWorld [entities][,brushes][,textures]", "RenderWorld [tween#]",
            "CaptureWorld ", "UpdateWorld [elapsed_time#]",
            "Collisions source_type,destination_type,method,response", "ClearCollisions ",
            "AmbientLight red#,green#,blue#", "WireFrame enable", "AntiAlias enable",
            "Dither enable", "WBuffer enable", "GfxDriverCaps3D ( )", "HWTexUnits ( )",
            "HWMultiTex enable",
            "LoaderMatrix file_ext$,xx#,xy#,xz#,yx#,yy#,yz#,zx#,zy#,zz#", "NetMsgData$ ( )",
            "NetMsgTo ( )", "NetMsgFrom ( )", "NetMsgType ( )", "RecvNetMsg ( )",
            "SendNetMsg ( type,msg$,from_player[,to_player][,reliable] )",
            "NetPlayerLocal ( player )", "NetPlayerName$ ( player )",
            "DeleteNetPlayer player", "CreateNetPlayer ( name$ )", "StopNetGame ",
            "JoinNetGame ( game_name$,ip_address$ )", "HostNetGame ( game_name$ )",
            "StartNetGame ( )", "Load3DSound ( filename$ )", "ChannelPlaying ( channel )",
            "ChannelPan channel,pan#", "ChannelVolume channel,volume#",
            "ChannelPitch channel,pitch", "ResumeChannel channel", "PauseChannel channel",
            "StopChannel channel", "PlayCDTrack ( track[,mode] )",
            "PlayMusic ( midifile$ )", "PlaySound ( sound )", "SoundPan sound,pan#",
            "SoundVolume sound,volume#", "SoundPitch sound,pitch", "LoopSound sound",
            "FreeSound sound", "LoadSound ( filename$ )", "DirectInputEnabled ( )",
            "EnableDirectInput enable", "FlushJoy ", "JoyVDir ( [port] )",
            "JoyUDir ( [port] )", "JoyZDir ( [port] )", "JoyYDir ( [port] )",
            "JoyXDir ( [port] )", "JoyHat ( [port] )", "JoyRoll# ( [port] )",
            "JoyYaw# ( [port] )", "JoyPitch# ( [port] )", "JoyV# ( [port] )",
            "JoyU# ( [port] )", "JoyZ# ( [port] )", "JoyY# ( [port] )", "JoyX# ( [port] )",
            "JoyWait ( [port] )", "WaitJoy ( [port] )", "GetJoy ( [port] )",
            "JoyHit ( button[,port] )", "JoyDown ( button[,port] )", "JoyType ( [port] )",
            "MoveMouse x,y", "FlushMouse ", "MouseZSpeed ( )", "MouseYSpeed ( )",
            "MouseXSpeed ( )", "MouseZ ( )", "MouseY ( )", "MouseX ( )", "MouseWait ( )",
            "WaitMouse ( )", "GetMouse ( )", "MouseHit ( button )", "MouseDown ( button )",
            "FlushKeys ", "WaitKey ( )", "GetKey ( )", "KeyHit ( key )", "KeyDown ( key )",
            "HidePointer ", "ShowPointer ", "Locate x,y", "Input$ ( [prompt$] )",
            "Print [string$]", "Write string$",
            "ImageRectCollide ( image,x,y,frame,rect_x,rect_y,rect_width,rect_height )",
            "ImageRectOverlap ( image,x,y,rect_x,rect_y,rect_width,rect_height )",
            "RectsOverlap ( x1,y1,width1,height1,x2,y2,width2,height2 )",
            "ImagesCollide ( image1,x1,y1,frame1,image2,x2,y2,frame2 )",
            "ImagesOverlap ( image1,x1,y1,image2,x2,y2 )", "TFormFilter enable",
            "TFormImage image,a#,b#,c#,d#", "RotateImage image,angle#",
            "ResizeImage image,width#,height#", "ScaleImage image,xscale#,yscale#",
            "ImageYHandle ( image )", "ImageXHandle ( image )", "ImageHeight ( image )",
            "ImageWidth ( image )", "AutoMidHandle enable", "MidHandle image",
            "HandleImage image,x,y", "MaskImage image,red,green,blue",
            "DrawBlockRect image,x,y,rect_x,rect_y,rect_width,rect_height[,frame]",
            "DrawImageRect image,x,y,rect_x,rect_y,rect_width,rect_height[,frame]",
            "TileBlock image[,x][,y][,frame]", "TileImage image[,x][,y][,frame]",
            "DrawBlock image,x,y[,frame]", "DrawImage image,x,y[,frame]",
            "ImageBuffer ( image[,frame] )", "GrabImage image,x,y[,frame]",
            "SaveImage ( image,bmpfile$[,frame] )", "FreeImage image",
            "CreateImage ( width,height[,frames] )", "CopyImage ( image )",
            "LoadAnimImage ( bmpfile$,cellwidth,cellheight,first,count )",
            "LoadImage ( bmpfile$ )", "CloseMovie movie", "MoviePlaying ( movie )",
            "MovieHeight ( movie )", "MovieWidth ( movie )",
            "DrawMovie ( movie[,x][,y][,w][,h] )", "OpenMovie ( file$ )",
            "StringHeight ( string$ )", "StringWidth ( string$ )", "FontHeight ( )",
            "FontWidth ( )", "FreeFont font",
            "LoadFont ( fontname$[,height][,bold][,italic][,underline] )",
            "CopyRect source_x,source_y,width,height,dest_x,dest_y[,src_buffer][,dest_buffer]",
            "Text x,y,text$[,centre_x][,centre_y]", "Line x1,y1,x2,y2",
            "Oval x,y,width,height[,solid]", "Rect x,y,width,height[,solid]", "Plot x,y",
            "Cls ", "SetFont font", "ClsColor red,green,blue", "ColorBlue ( )",
            "ColorGreen ( )", "ColorRed ( )", "GetColor x,y", "Color red,green,blue",
            "Viewport x,y,width,height", "Origin x,y",
            "CopyPixelFast src_x,src_y,src_buffer,dest_x,dest_y[,dest_buffer]",
            "CopyPixel src_x,src_y,src_buffer,dest_x,dest_y[,dest_buffer]",
            "WritePixelFast x,y,argb[,buffer]", "ReadPixelFast ( x,y[,buffer] )",
            "WritePixel x,y,argb[,buffer]", "ReadPixel ( x,y[,buffer] )",
            "UnlockBuffer [buffer]", "LockBuffer [buffer]", "BufferDirty buffer",
            "SaveBuffer ( buffer,bmpfile$ )", "LoadBuffer ( buffer,bmpfile$ )",
            "GraphicsBuffer ( )", "SetBuffer buffer", "GraphicsDepth ( )",
            "GraphicsHeight ( )", "GraphicsWidth ( )", "Flip [vwait]", "VWait [frames]",
            "ScanLine ( )", "BackBuffer ( )", "FrontBuffer ( )", "GammaBlue# ( blue )",
            "GammaGreen# ( green )", "GammaRed# ( red )", "UpdateGamma [calibrate]",
            "SetGamma src_red,src_green,src_blue,dest_red#,dest_green#,dest_blue#",
            "GraphicsLost ( )", "EndGraphics ", "Graphics3D width,height[,depth][,mode]",
            "Graphics width,height[,depth][,mode]", "Windowed3D ( )", "GfxMode3D ( mode )",
            "GfxMode3DExists ( width,height,depth )", "CountGfxModes3D ( )",
            "GfxDriver3D ( driver )", "TotalVidMem ( )", "AvailVidMem ( )",
            "GfxModeDepth ( mode )", "GfxModeHeight ( mode )", "GfxModeWidth ( mode )",
            "GfxModeExists ( width,height,depth )", "CountGfxModes ( )",
            "SetGfxDriver driver", "GfxDriverName$ ( driver )", "CountGfxDrivers ( )",
            "CallDLL ( dll_name$,func_name$[,in_bank][,out_bank] )",
            "WriteBytes ( bank,file,offset,count )", "ReadBytes ( bank,file,offset,count )",
            "PokeFloat bank,offset,value#", "PokeInt bank,offset,value",
            "PokeShort bank,offset,value", "PokeByte bank,offset,value",
            "PeekFloat# ( bank,offset )", "PeekInt ( bank,offset )",
            "PeekShort ( bank,offset )", "PeekByte ( bank,offset )",
            "CopyBank src_bank,src_offset,dest_bank,dest_offset,count",
            "ResizeBank bank,size", "BankSize ( bank )", "FreeBank bank",
            "CreateBank ( [size] )", "DeleteFile file$", "CopyFile file$,to$",
            "FileType ( file$ )", "FileSize ( file$ )", "DeleteDir dir$", "CreateDir dir$",
            "ChangeDir dir$", "CurrentDir$ ( )", "NextFile$ ( dir )", "CloseDir dir",
            "ReadDir ( dirname$ )", "SeekFile ( file_stream,pos )",
            "FilePos ( file_stream )", "CloseFile file_stream", "WriteFile ( filename$ )",
            "ReadFile ( filename$ )", "OpenFile ( filename$ )",
            "TCPTimeouts read_millis,accept_millis", "TCPStreamPort ( tcp_stream )",
            "TCPStreamIP ( tcp_stream )", "AcceptTCPStream ( tcp_server )",
            "CloseTCPServer tcp_server", "CreateTCPServer ( port )",
            "CloseTCPStream tcp_stream",
            "OpenTCPStream ( server$,server_port[,local_port] )",
            "UDPTimeouts recv_timeout", "UDPMsgPort ( udp_stream )",
            "UDPMsgIP ( udp_stream )", "UDPStreamPort ( udp_stream )",
            "UDPStreamIP ( udp_stream )", "RecvUDPMsg ( udp_stream )",
            "SendUDPMsg udp_stream,dest_ip[,dest_port]", "CloseUDPStream udp_stream",
            "CreateUDPStream ( [port] )", "HostIP ( host_index )",
            "CountHostIPs ( host_name$ )", "DottedIP$ ( IP )",
            "CopyStream src_stream,dest_stream[,buffer_size]", "WriteLine stream,string$",
            "WriteString stream,string$", "WriteFloat stream,float#", "WriteInt stream,int",
            "WriteShort stream,short", "WriteByte stream,byte", "ReadLine$ ( stream )",
            "ReadString$ ( stream )", "ReadFloat# ( stream )", "ReadInt ( stream )",
            "ReadShort ( stream )", "ReadByte ( stream )", "ReadAvail ( stream )",
            "Eof ( stream )", "CurrentTime$ ( )", "CurrentDate$ ( )", "Bin$ ( value )",
            "Hex$ ( value )", "Len ( string$ )", "Asc ( string$ )", "Chr$ ( ascii )",
            "RSet$ ( string$,size )", "LSet$ ( string$,size )", "Trim$ ( string$ )",
            "Lower$ ( string$ )", "Upper$ ( string$ )", "Mid$ ( string$,start[,count] )",
            "Instr ( string$,find$[,from] )", "Replace$ ( string$,from$,to$ )",
            "Right$ ( string$,count )", "Left$ ( string$,count )",
            "String$ ( string$,repeat )", "RndSeed ( )", "SeedRnd seed",
            "Rand ( from[,to] )", "Rnd# ( from#[,to#] )", "Log10# ( float# )",
            "Log# ( float# )", "Exp# ( float# )", "Ceil# ( float# )", "Floor# ( float# )",
            "Sqr# ( float# )", "ATan2# ( floata#,floatb# )", "ATan# ( float# )",
            "ACos# ( float# )", "ASin# ( float# )", "Tan# ( degrees# )",
            "Cos# ( degrees# )", "Sin# ( degrees# )",
            "api_CreateLink lpszPathObj$,lpszPathLink$,lpszArg$,lpszDesc$,lpszDir$,lpszIcon$,iconIndex",
            "api_MoveFile ( lpExistingFileName$,lpNewFileName$ )",
            "api_GlobalAlloc ( uFlags,dwBytes )", "api_GlobalLock ( hMem )",
            "api_GlobalUnlock ( hMem )", "api_RtlCopyMemory Destination,Source,Length",
            "api_RtlMoveMemory Destination,Source,Length",
            "GetSpecialFolder ( folderID,bank )", "GiveDirectoryUserFullAccess ( path$ )",
            "SpecialFolderLocation folderID", "HasFocus ( )", "api_OpenClipboard ( hwnd )",
            "api_CloseClipboard ( )", "api_ExamineClipboard ( format )",
            "api_EmptyClipboard ( )", "api_GetClipboardData$ ( format )",
            "api_SetClipboardData ( format,Handle )"
        };

    }
}
